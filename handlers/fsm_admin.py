# handlers/fsm_admin.py

from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram import Router, types, F
from db import add_master
from keyboards import get_master_photo_kb, get_master_category_kb, get_admin_menu_kb 
from config import ADMIN_IDS 
from typing import List

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ –∏ —Ñ–∏–ª—å—Ç—Ä –∞–¥–º–∏–Ω–∞
router = Router()
router.message.filter(F.from_user.id.in_(ADMIN_IDS))
router.callback_query.filter(F.from_user.id.in_(ADMIN_IDS))

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
class AddMaster(StatesGroup):
    """–ö–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞."""
    category = State()
    name = State()
    city = State()             
    price = State()
    contact = State()
    photos = State() 

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞ ---

@router.message(F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–∞—Å—Ç–µ—Ä–∞")
async def cmd_add_master_start(message: types.Message, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞, –ø—Ä–µ–¥–ª–∞–≥–∞—è –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–Ω–æ–ø–∫–∞–º–∏."""
    await message.answer(
        "üõ†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ **–∫–∞—Ç–µ–≥–æ—Ä–∏—é –º–∞—Å—Ç–µ—Ä–∞** –∏–∑ —Å–ø–∏—Å–∫–∞:",
        reply_markup=get_master_category_kb(), 
        parse_mode="Markdown"
    )
    await state.set_state(AddMaster.category)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–Ω–æ–ø–∫–æ–π ---

@router.callback_query(F.data.startswith("select_cat_"), AddMaster.category)
async def process_category_callback(callback: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏."""
    await callback.answer() 
    
    category = callback.data.split("select_cat_")[1]
    
    await state.update_data(category=category)
    
    await callback.message.edit_text(
        f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: **{category}**.\n\n"
        "‚úçÔ∏è –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ **–∏–º—è** –º–∞—Å—Ç–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤).",
        parse_mode="Markdown",
        reply_markup=None 
    )
    await state.set_state(AddMaster.name)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã (–ò–°–ü–†–ê–í–õ–ï–ù–û) ---

@router.callback_query(F.data == "cancel_master_add")
async def cancel_add_master(callback: types.CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ."""
    await callback.answer("–ü—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω.")
    
    await state.clear() 
    
    # 1. –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
    await callback.message.edit_text(
        "‚ùå **–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.**",
        reply_markup=None, # –£–±–∏—Ä–∞–µ–º Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        parse_mode="Markdown"
    )
    
    # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ù–û–í–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await callback.message.answer(
        "‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –ø–∞–Ω–µ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
        reply_markup=get_admin_menu_kb()
    )

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ---

@router.message(AddMaster.category)
async def process_category_unexpected_text(message: types.Message):
    """–õ–æ–≤–∏—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ (—Ç–µ–∫—Å—Ç –≤–º–µ—Å—Ç–æ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏) –∏ –ø—Ä–æ—Å–∏—Ç –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é."""
    await message.answer(
        "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, **–≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏** –Ω–∏–∂–µ. –ù–µ –≤–≤–æ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤—Ä—É—á–Ω—É—é.",
        reply_markup=get_master_category_kb()
    )


# --- –°–æ—Å—Ç–æ—è–Ω–∏–µ: –í–≤–æ–¥ –∏–º–µ–Ω–∏ ---

@router.message(AddMaster.name)
async def process_name(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º—è –∏ –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –≥–æ—Ä–æ–¥."""
    await state.update_data(name=message.text.strip())
    
    await message.answer("üèôÔ∏è –í–≤–µ–¥–∏—Ç–µ **–≥–æ—Ä–æ–¥**, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç –º–∞—Å—Ç–µ—Ä.")
    await state.set_state(AddMaster.city)

# --- –°–æ—Å—Ç–æ—è–Ω–∏–µ: –í–≤–æ–¥ –≥–æ—Ä–æ–¥–∞ ---
@router.message(AddMaster.city)
async def process_city(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –∏ –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ —Ü–µ–Ω—É."""
    await state.update_data(city=message.text.strip())
    
    await message.answer("üí∞ –í–≤–µ–¥–∏—Ç–µ **—Ü–µ–Ω—É —É—Å–ª—É–≥** (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç 1000 —Ä—É–±/—á–∞—Å –∏–ª–∏ –î–æ–≥–æ–≤–æ—Ä–Ω–∞—è).")
    await state.set_state(AddMaster.price)

# --- –°–æ—Å—Ç–æ—è–Ω–∏–µ: –í–≤–æ–¥ —Ü–µ–Ω—ã ---

@router.message(AddMaster.price)
async def process_price(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—É—é —Ü–µ–Ω—É."""
    await state.update_data(price=message.text.strip())
    await message.answer("üìû –í–≤–µ–¥–∏—Ç–µ **–∫–æ–Ω—Ç–∞–∫—Ç** –º–∞—Å—Ç–µ—Ä–∞ (—Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ @username Telegram).")
    await state.set_state(AddMaster.contact)

# --- –°–æ—Å—Ç–æ—è–Ω–∏–µ: –í–≤–æ–¥ –∫–æ–Ω—Ç–∞–∫—Ç–∞ ---

@router.message(AddMaster.contact)
async def process_contact(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Ñ–æ—Ç–æ."""
    await state.update_data(contact=message.text.strip())
    
    await state.update_data(photos=[]) 
    
    await message.answer(
        "üñºÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ **—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏** –º–∞—Å—Ç–µ—Ä–∞ (–∏–ª–∏ –µ–≥–æ —Ä–∞–±–æ—Ç). "
        "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ –ø–æ–¥—Ä—è–¥. \n\n"
        "–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É **'‚û°Ô∏è –ì–æ—Ç–æ–≤–æ'**.",
        reply_markup=get_master_photo_kb(),
        parse_mode="Markdown"
    )
    await state.set_state(AddMaster.photos)

# --- –°–æ—Å—Ç–æ—è–Ω–∏–µ: –°–±–æ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π ---

@router.message(AddMaster.photos, F.photo)
async def process_photos(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ file_id."""
    file_id = message.photo[-1].file_id
    
    data = await state.get_data()
    photos: List[str] = data.get('photos', [])
    photos.append(file_id)
    
    await state.update_data(photos=photos)
    
    await message.reply("‚úÖ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–∏–Ω—è—Ç–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â—ë –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '‚û°Ô∏è –ì–æ—Ç–æ–≤–æ'.")

@router.callback_query(F.data == "add_master_photo_done", AddMaster.photos)
async def process_photos_done(callback: types.CallbackQuery, state: FSMContext):
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ FSM."""
    await callback.answer() 
    
    data = await state.get_data()
    category = data.get('category')
    name = data.get('name')
    city = data.get('city')
    price = data.get('price')
    contact = data.get('contact')
    photos: List[str] = data.get('photos', [])

    if not photos:
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –ø—Ä–æ—Å–∏–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–ª–∏ –Ω–∞–∂–∞—Ç—å "–ì–æ—Ç–æ–≤–æ" –µ—â–µ —Ä–∞–∑ –¥–ª—è –≤—ã—Ö–æ–¥–∞
        try:
             await callback.message.edit_text(
                "‚ö†Ô∏è –í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ. "
                "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '‚û°Ô∏è –ì–æ—Ç–æ–≤–æ' –µ—â–µ —Ä–∞–∑, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.",
                reply_markup=get_master_photo_kb()
            )
        except:
             await callback.message.answer(
                "‚ö†Ô∏è –í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ. "
                "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '‚û°Ô∏è –ì–æ—Ç–æ–≤–æ' –µ—â–µ —Ä–∞–∑, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.",
                reply_markup=get_master_photo_kb()
            )
        return

    await add_master(category, name, city, price, contact, photos) 
    
    await state.clear()
    
    await callback.message.edit_text(
        f"üéâ **–ú–∞—Å—Ç–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω!**\n\n"
        f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n"
        f"üèôÔ∏è –ì–æ—Ä–æ–¥: {city}\n"
        f"–ò–º—è: {name}\n"
        f"–¶–µ–Ω–∞: {price}\n"
        f"–ö–æ–Ω—Ç–∞–∫—Ç: {contact}\n"
        f"–§–æ—Ç–æ: {len(photos)} —à—Ç.",
        parse_mode="Markdown",
        reply_markup=None 
    )